record i128 {
  hi: u64,
  lo: u64,
}

record u128 {
  hi: u64,
  lo: u64,
}

resource de-value {}

resource deserialize-seed {
  erased-deserialize: func(deserializer: deserializer-handle) -> expected<de-value, de-error-handle>
}

resource visitor {
  erased-expecting: func() -> option<string>
  
  erased-visit-bool: func(v: bool) -> expected<de-value, de-error-handle>
  erased-visit-i8: func(v: s8) -> expected<de-value, de-error-handle>
  erased-visit-i16: func(v: s16) -> expected<de-value, de-error-handle>
  erased-visit-i32: func(v: s32) -> expected<de-value, de-error-handle>
  erased-visit-i64: func(v: s64) -> expected<de-value, de-error-handle>
  erased-visit-i128: func(v: i128) -> expected<de-value, de-error-handle>
  erased-visit-u8: func(v: u8) -> expected<de-value, de-error-handle>
  erased-visit-u16: func(v: u16) -> expected<de-value, de-error-handle>
  erased-visit-u32: func(v: u32) -> expected<de-value, de-error-handle>
  erased-visit-u64: func(v: u64) -> expected<de-value, de-error-handle>
  erased-visit-u128: func(v: u128) -> expected<de-value, de-error-handle>
  erased-visit-f32: func(v: float32) -> expected<de-value, de-error-handle>
  erased-visit-f64: func(v: float64) -> expected<de-value, de-error-handle>
  erased-visit-char: func(v: char) -> expected<de-value, de-error-handle>
  erased-visit-str: func(v: string) -> expected<de-value, de-error-handle>
  erased-visit-string: func(v: string) -> expected<de-value, de-error-handle>
  erased-visit-bytes: func(v: list<u8>) -> expected<de-value, de-error-handle>
  erased-visit-byte-buf: func(v: list<u8>) -> expected<de-value, de-error-handle>
  erased-visit-none: func() -> expected<de-value, de-error-handle>
  erased-visit-some: func(deserializer: deserializer-handle) -> expected<de-value, de-error-handle>
  erased-visit-unit: func() -> expected<de-value, de-error-handle>
  erased-visit-newtype-struct: func(deserializer: deserializer-handle) -> expected<de-value, de-error-handle>
  erased-visit-seq: func(seq: seq-access-handle) -> expected<de-value, de-error-handle>
  erased-visit-map: func(map: map-access-handle) -> expected<de-value, de-error-handle>
  erased-visit-enum: func(data: enum-access-handle) -> expected<de-value, de-error-handle>
}

record de-error-handle {
  %handle: s32
}

record deserializer-handle {
  %handle: s32
}

record seq-access-handle {
  %handle: s32
}

record map-access-handle {
  %handle: s32
}

record enum-access-handle {
  %handle: s32
}
